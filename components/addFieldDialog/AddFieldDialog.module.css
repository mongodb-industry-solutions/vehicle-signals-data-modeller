.metadataTabs {
  width: 100%;
}

.fieldForm {
  display: grid;
  gap: 1rem;
  padding: 1rem 0;
}

.formGroup {
  display: grid;
  grid-template-columns: 1fr 3fr;
  align-items: start;
  gap: 1rem;
}

.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.formGroupHalf {
  display: grid;
  grid-template-columns: 1fr 2fr;
  align-items: center;
  gap: 0.5rem;
}

.formLabel {
  text-align: right;
  font-weight: 500;
}

.formInput,
.formSelect,
.formTextarea {
  width: 100%;
}

.formTextarea {
  min-height: 80px;
}

.switchContainer {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* Signal type option styling */
.signalTypeOption {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.signalTypeDescription {
  font-size: 0.75rem;
  color: var(--muted-foreground);
}

.typeBadge {
  font-size: 0.75rem;
  margin-right: 0.25rem;
  text-transform: capitalize;
}

/* Metadata selection styling */
.metadataSelectionContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.metadataSelectionTitle {
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.metadataSelectionList {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 0.75rem;
  margin-bottom: 1rem;
}

.metadataCheckboxItem {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.metadataCheckboxLabel {
  font-size: 0.875rem;
}

.selectedMetadataFields {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Custom metadata styling */
.customMetadataContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.customMetadataTitle {
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.customMetadataInput {
  margin-bottom: 1rem;
}

.customMetadataInputRow {
  display: flex;
  gap: 0.5rem;
}

.customMetadataKeyInput {
  flex: 1;
}

.customMetadataValueInput {
  flex: 2;
}

.customMetadataTable {
  border: 1px solid var(--border);
  border-radius: 0.375rem;
  overflow: hidden;
}

.customMetadataHeader {
  display: grid;
  grid-template-columns: 1fr 2fr 80px;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: var(--muted);
  font-weight: 500;
}

.customMetadataHeaderCell {
  font-size: 0.875rem;
}

.customMetadataRow {
  display: grid;
  grid-template-columns: 1fr 2fr 80px;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-top: 1px solid var(--border);
}

.customMetadataCell {
  font-size: 0.875rem;
  display: flex;
  align-items: center;
}

.removeCustomMetaButton {
  height: 1.5rem;
  width: 1.5rem;
  padding: 0;
}

.noCustomMetadata {
  text-align: center;
  padding: 1rem;
  color: var(--muted-foreground);
  font-size: 0.875rem;
}

/* Allowed values styling */
.allowedValuesContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.allowedValuesInput {
  display: flex;
  gap: 0.5rem;
}

.allowedValuesList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  min-height: 2rem;
  padding: 0.5rem;
  border: 1px solid var(--border);
  border-radius: 0.375rem;
}

.allowedValueBadge {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.removeAllowedButton {
  height: 1.25rem;
  width: 1.25rem;
  padding: 0;
}

.noAllowedValues {
  color: var(--muted-foreground);
  font-size: 0.875rem;
}

/* Form content styling */
.formContent {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 1rem 0;
}

.formSection {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.sectionTitle {
  font-weight: 600;
  font-size: 1rem;
  color: var(--foreground);
  margin-bottom: 0.25rem;
}

.fieldItem {
  display: grid;
  grid-template-columns: 1fr 3fr;
  gap: 1rem;
  align-items: start;
}

.fieldLabel {
  text-align: right;
  font-weight: 500;
  padding-top: 0.5rem;
}

.fieldInput,
.fieldSelect,
.fieldTextarea {
  width: 100%;
}

.fieldTextarea {
  min-height: 80px;
}

/* Metadata header section with quick add buttons */
.metadataHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  margin-bottom: 0.5rem;
}

.quickAddButtons {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.suggestionButton {
  font-size: 0.75rem;
  height: 28px;
}

/* Metadata list */
.metadataList {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

/* Metadata item styling */
.metadataItem {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 0.75rem;
  border-radius: 0.25rem;
  background-color: var(--muted);
}

.fieldHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
}

.metadataKey {
  font-weight: 500;
  flex: 1;
  padding-top: 0.25rem;
}

.fieldActions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.fieldValue {
  width: 100%;
}

.typeSelect {
  width: 110px;
  flex-shrink: 0;
}

.deleteButton {
  flex-shrink: 0;
  height: 2rem;
  width: 2rem;
}

/* Signal type option styling */
.signalTypeOption {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.typeDescription {
  font-size: 0.75rem;
  color: var(--muted-foreground);
}

.typeBadge {
  font-size: 0.75rem;
  text-transform: capitalize;
}

/* Add new field section styling */
.addNewFieldSection {
  margin-top: 1rem;
  padding: 1rem;
  border-radius: 0.25rem;
  background-color: var(--card);
  border: 1px dashed var(--border);
}

.addNewFieldTitle {
  font-weight: 500;
  margin-bottom: 0.75rem;
}

.addNewFieldForm {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.addNewFieldRow {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.newFieldInput {
  flex: 2;
}

.newFieldTypeSelect {
  flex: 1;
}

.addFieldButton {
  flex-shrink: 0;
  height: 2.25rem;
  width: 2.25rem;
  padding: 0;
}

/* Value input for new field */
.addNewFieldValue {
  width: 100%;
}

/* Dialog content styling */
.dialogContent {
  max-width: 600px;
  max-height: 85vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.scrollArea {
  flex: 1;
  max-height: calc(85vh - 160px); /* Account for header and footer */
  overflow: auto;
  padding-right: 1rem;
}